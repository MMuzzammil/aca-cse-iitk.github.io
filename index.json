[{
  "name": "Best Faculty Award",
  "description": "Dr. Pankaj Jalote has instituted the CSE Best Teacher Award. The award includes a plaque given to the Professor. An appropriate citation written by the graduating batch is read out in praise of the professor selected for the award. The awardee is elected by the graduating BTech, MTech, and dual-degree students.Dr. Pankaj Jalote is a former faculty member of the Department of CSE, IIT Kanpur. He has authored several well-known books on software engineering and fault tolerance.",
  "body": " Dr. Pankaj Jalote has instituted the CSE Best Teacher Award. The award includes a plaque given to the Professor. An appropriate citation written by the graduating batch is read out in praise of the professor selected for the award. The awardee is elected by the graduating BTech, MTech, and dual-degree students.Dr. Pankaj Jalote is a former faculty member of the Department of CSE, IIT Kanpur. He has authored several well-known books on software engineering and fault tolerance. He is on the Board of Advisors of many software companies in India and USA, is a Technical Advisory Board member for Microsoft Research, India, and is on the Editorial Board of IEEE Transactions on Software Engineering, and International Journal of Emperical Software Engineering.His research interest is in software engineering (software quality, software process improvement, software architecture analysis), and fault tolerant systems and reliability.Past Winners    2016-17 Dr. Surender Baswana     2015-16 Dr. Sumit Ganguly   2014-15 Dr. Surender Baswana   2013-14 Dr. Satyadev Nandakumar   2012-13 Dr. Surender Baswana   2011-12 Dr. Surender Baswana   2010-11 Dr. Surender Baswana   2009-10 Dr. Surender Baswana   2008-09 Dr. Manindra Agrawal   2007-08 Dr. Rajat Moona   2003-04 Dr. Deepak Gupta &amp;amp; Dr. Rajat Moona   2002-03 Dr. Manindra Agrawal   2001-02 Dr. Harish Karnick   2000-01 Dr. Sumit Ganguly    ",
  "url": "https://aca-cse-iitk.github.io/best-faculty-award/"
},{
  "name": "League of Programmers",
  "description": " Basics and STL Greedy, Divide and Conquer, Binary Search Graph Theory Dynamic Programming Number Theory Segment Trees Network Flow and Matching (By Jaehyun Park from Stanford)  Flow problems (Quora) SPOJ STABARDS SPOJ MILPATR Codechef IOPC2013, Assignments at IITK Project Euler 345   ",
  "body": " Basics and STL Greedy, Divide and Conquer, Binary Search Graph Theory Dynamic Programming Number Theory Segment Trees Network Flow and Matching (By Jaehyun Park from Stanford)  Flow problems (Quora) SPOJ STABARDS SPOJ MILPATR Codechef IOPC2013, Assignments at IITK Project Euler 345   ",
  "url": "https://aca-cse-iitk.github.io/league-of-programmers/"
},{
  "name": "Activities",
  "description": "Upcoming Events  Stratazenith Microsoft Code Fun Do 2018  Past Events  Farewell for the graduating batch was held on April 12th, 2015. CSE Cricket and Football Tournament CSE Trivia Quiz on CSE-IITK History Semester Projects for first year students. Departmental trip to Nainital from 23rd Jan to 26th Jan 2015. Microsoft Code.fun.do Happy Hour October’14 and November’14 Freshers for Y14 Batch of CSE League of Programmers Lecture Series for ACM ICPC 2014 ACA organized summer school in June-July 2014.",
  "body": " Upcoming Events  Stratazenith Microsoft Code Fun Do 2018  Past Events  Farewell for the graduating batch was held on April 12th, 2015. CSE Cricket and Football Tournament CSE Trivia Quiz on CSE-IITK History Semester Projects for first year students. Departmental trip to Nainital from 23rd Jan to 26th Jan 2015. Microsoft Code.fun.do Happy Hour October’14 and November’14 Freshers for Y14 Batch of CSE League of Programmers Lecture Series for ACM ICPC 2014 ACA organized summer school in June-July 2014. More information Farewell for the graduating batch was held on April 12th, 2014. Microsoft Appathon Semester Projects given to CSE students of first year (batch Y12) ACM-ICPC Training Camp (21-28th October 2012)  ",
  "url": "https://aca-cse-iitk.github.io/activities/"
},{
  "name": "Contact Us",
  "description": "@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,200,200italic,300,300italic,400italic,600,600italic,700,700italic,900,900italic);body { font-family: &amp;lsquo;Source Sans Pro&amp;rsquo;, sans-serif; line-height: 1.5; color: #323232; font-size: 15px; font-weight: 400; text-rendering: optimizeLegibility; -webkit-font-smoothing: antialiased; -moz-font-smoothing: antialiased; } table, th, td { border: none !important; } .heading-title { margin-bottom: 100px; } .text-center { text-align: center; } .heading-title h3 { margin-bottom: 0; letter-spacing: 2px; font-weight: normal; } .p-top-30 { padding-top: 30px; } .half-txt { width: 60%; margin: 0 auto; display: inline-block; line-height: 25px; color: #7e7e7e; } .",
  "body": "@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,200,200italic,300,300italic,400italic,600,600italic,700,700italic,900,900italic);body { font-family: &amp;lsquo;Source Sans Pro&amp;rsquo;, sans-serif; line-height: 1.5; color: #323232; font-size: 15px; font-weight: 400; text-rendering: optimizeLegibility; -webkit-font-smoothing: antialiased; -moz-font-smoothing: antialiased; } table, th, td { border: none !important; } .heading-title { margin-bottom: 100px; } .text-center { text-align: center; } .heading-title h3 { margin-bottom: 0; letter-spacing: 2px; font-weight: normal; } .p-top-30 { padding-top: 30px; } .half-txt { width: 60%; margin: 0 auto; display: inline-block; line-height: 25px; color: #7e7e7e; } .text-uppercase { text-transform: uppercase; }.team-member, .team-member .team-img { position: absolute; } .team-member { overflow: hidden; } .team-member, .team-member .team-img { position: relative;}.team-hover { position: absolute; top: 0; left: 0; bottom: 0; right: 0; margin: 0; border: 20px solid rgba(0, 0, 0, 0.1); background-color: rgba(255, 255, 255, 0.90); opacity: 0; -webkit-transition: all 0.3s; transition: all 0.3s; } .team-member:hover .team-hover .desk { top: 35%; } .team-member:hover .team-hover, .team-member:hover .team-hover .desk, .team-member:hover .team-hover .s-link { opacity: 1; }.team-hover .desk { position: absolute; top: 0%; width: 100%; opacity: 0; -webkit-transform: translateY(-55%); -ms-transform: translateY(-55%); transform: translateY(-55%); -webkit-transition: all 0.3s 0.2s; transition: all 0.3s 0.2s; padding: 0 20px; } .desk, .desk h4, .team-hover .s-link a { text-align: center; color: #222; } .team-member:hover .team-hover .s-link { bottom: 10%; } .team-member:hover .team-hover, .team-member:hover .team-hover .desk, .team-member:hover .team-hover .s-link { opacity: 1; } .team-hover .s-link { position: absolute; bottom: 0; width: 100%; opacity: 0; text-align: center; -webkit-transform: translateY(45%); -ms-transform: translateY(45%); transform: translateY(45%); -webkit-transition: all 0.3s 0.2s; transition: all 0.3s 0.2s; font-size: 35px; } .desk, .desk h4, .team-hover .s-link a { text-align: center; color: #222; } .team-member .s-link a { margin: 0 10px; color: #333; font-size: 16px; } .team-title { position: static; padding: 20px 0; display: inline-block; letter-spacing: 2px; width: 100%; } .team-title h5 { margin-bottom: 0px; display: block; text-transform: uppercase; } .team-title span { font-size: 12px; text-transform: uppercase; color: #a5a5a5; letter-spacing: 1px; }  Coordinators       Jaskirat Singh 8360311209     Prakhar Agarwal 9468652335     Akshat Jindal 8800346888               Rajat Mittal Faculty Incharge   ",
  "url": "https://aca-cse-iitk.github.io/contact/"
},{
  "name": "Learn to Play Atari Games using Reinforcement Learning",
  "description": "This is an agent made to learn playing Atari Pong, which runs on the principles of Reinforcement Learning. The code is written in Python using Keras and OpenAI Gym. ",
  "body": "This is an agent made to learn playing Atari Pong, which runs on the principles of Reinforcement Learning. The code is written in Python using Keras and OpenAI Gym. The agent uses the technique of Deep Q-Networks (DQNs) to learn using a Convolutional Neural Network (CNN), which uses off-policy Temporal Difference control, also known as Q-Learning, on a Model-free Markov Decision Process (MDP). A key part of DQNs is the use of Experience Replay and Fixed Targets, which is being used here to stabilize the CNN and help it to converge.Github: Reinforcement Learning",
  "url": "https://aca-cse-iitk.github.io/projects/markdownforref---harish-rajagopal/"
},{
  "name": "Linux From Scratch",
  "description": "This project was targeted to make us familiar with the Bash Script (Default Shell), Concepts of Python Language, Linux Architecture and how to work your way around in a linux operating system. ",
  "body": "This project was targeted to make us familiar with the Bash Script (Default Shell), Concepts of Python Language, Linux Architecture and how to work your way around in a linux operating system. The project progressed in 3 phases: Command Line: First Phase in which we learnt the basics of bash script and practiced via scraping data and making a studentsearch completely in bash script. Data Scraping Script:Code in Bash Script Student Search MainscriptCode in Bash Script  Learning Python: Secondly, we started learning python and using various useful python libraries. ZMQ Passing the parcelUsing Server-Client method in ZMQ GrepImplemented Grep Command of Bash in Python Email FilterA simple python email filter  Linux Architecture: Lastly, using the kernel of the base operating system, setup our own custom OS by compiling required packages. Beautiful Soup ScraperScraping code for compiling Packages using BS4   Github: ACA_Project",
  "url": "https://aca-cse-iitk.github.io/projects/ayush268---ayush-bansal/"
},{
  "name": "Android Development",
  "description": "ACA Project Markdown File - By Devanshu Somani(160231) and Niket Agrawal(160446) In our project, we aimed at learning basic android application developing techniques using Android Studio. ",
  "body": "ACA Project Markdown File - By Devanshu Somani(160231) and Niket Agrawal(160446) In our project, we aimed at learning basic android application developing techniques using Android Studio. Project Description Camera App - The app had a button which on clicked listed all the image capture apps installed in the android system. The image could then be captured, saved and viewed whenever required. SQL Database App - We used SQL language for creating a basic database that could store some data given to it and can keep it available even after the app is switched off. The app could add or remove rows as per our requirement. Fitstep App - Fitstep is an android fitness app which can measure the number of steps taken by user as he/she works out which makes it unique in terms of fitness app.And many more..  Android Studio Android apps are created using android studio. There are two parts of any android application, first its body or its display which the users can see and second the inner brains of the application or that code that governs its functioning. The former is coded in XML and the latter in Java. Thus the package of the application, as soon as it is created, by default creates a java class which functions as the basic code controlling the entire app and various other resources like the XML layout file which serves as the user interface of the application. Other by default created resource values include XML files which are used to save user defined strings, colors and styles. Also, a file named AndroidManifest.xml serves the purpose of parental controls and decides whether various permissions like internet access, background functioning, notification access etc. We learnt many app building processes and methods to create many types of apps and adding many elements to the applications which we generally see in real life apps.  Some Project LinksSQL Database App - https://github.com/devanshusomani99/Android-Development/tree/d9764b25d2885dfba99d0ad6c9cb5ee09205fa13Broadcaster And Receiver - https://github.com/devanshusomani99/Android-Development/tree/5b1aa74a74bf89810aec9a6775264c84d0d973ffFragments App (Meme Creator) - https://github.com/devanshusomani99/Android-Development/tree/85c8e2315137e964ac0c7e4b1ca5e458bf075fd6Notifier App - https://github.com/devanshusomani99/Android-Development/tree/7baf19e841cc2a7194a676ec20d8515a1e0011c0SharedPreferences App (Styles) - https://github.com/devanshusomani99/Android-Development/tree/2ddb9f188d77d07281fc4e933bacc3b212d529d9How to view these projects?Android Studio saves all the necessary data of the project inside the subdirectory &amp;ldquo;app&amp;rdquo; inside the main project folder. So what is on the links should be first copied into a project and must then be viewed after opening Android Studio.Resources Used theNewBoston Android Studio tutorials. Stackoverflow Tutorials Point Udacity  Mentor - Raktim Mitra",
  "url": "https://aca-cse-iitk.github.io/projects/markdownforref---devanshu-somani/"
},{
  "name": "Mini Projects on Algorithms, Python, Web Dev, Cyber Security Wargames, Machine Learning, Latex",
  "description": "Project aimed at learning about various fields in computer science and is a good start to knowning various topics like webD, Machine Learning, Cyber-Security(Wargames), etc. ",
  "body": "Project aimed at learning about various fields in computer science and is a good start to knowning various topics like webD, Machine Learning, Cyber-Security(Wargames), etc. Github: click here",
  "url": "https://aca-cse-iitk.github.io/projects/sample---yash-chandnani/"
},{
  "name": "ACA Mini-Projects (-Anuj Nagpal)",
  "description": "This is a composition of many mini-projects. It involved Learning Python, C++, HTML and Basic CSS, Algorithms, Web Scraping, Learning Latex and Introduction to Machine Learning. The coding work is done in C++ language. ",
  "body": "This is a composition of many mini-projects. It involved Learning Python, C++, HTML and Basic CSS, Algorithms, Web Scraping, Learning Latex and Introduction to Machine Learning. The coding work is done in C++ language. Following task were completed in the mini projects- Python: Made TicTacToe game (wrote an algorithm for cpu player and designed the interface for the game) in python. C++Made a Arithmatic expression evaluator. Web Designing Made a website using HTML and basic CSS under given task. [website-http://home.iitk.ac.in/~tushargr/] Web Scraping Wrote a python to extract list of videos available on a particular youtube channel using BeautifulSoup.  Github: ACA Mini-Projects",
  "url": "https://aca-cse-iitk.github.io/projects/markdownforref---tushar-gurjar/"
},{
  "name": "Game Theory",
  "description": "It includes zero sum games in which a person plays against computer or 2 persons play against each other using zeromq library. We made two games as part of this project- Tic-Tac-Toe and Connect4. The project consists of two games :-",
  "body": "It includes zero sum games in which a person plays against computer or 2 persons play against each other using zeromq library. We made two games as part of this project- Tic-Tac-Toe and Connect4. The project consists of two games :- Tic-Tac-Toe: Tic-tac-toe is a 2-player game, in which both players take turns marking the spaces in a 3×3 grid alternately. The player who succeeds in placing three of their marks in a horizontal, vertical, or diagonal row wins the game. We first made it using brute force method, then we improved it&amp;rsquo;s time efficiency using min-max algorithm. Connect4: Connect4 is a two-player connection game in which the players first choose a color and then take turns dropping colored discs from the top into a seven-column, six-row vertically suspended grid. The pieces fall straight down, occupying the next available space within the column. The objective of the game is to be the first to form a horizontal, vertical, or diagonal line of four of one&amp;rsquo;s own discs. It was first made using minmax algorithm and heuristic function. But that was not very efficient as we could check only upto depth 4. Then we optimized it using alpha-beta pruning.  Github: Tic-Tac-Toe Github: Connect4",
  "url": "https://aca-cse-iitk.github.io/projects/markdownforref---siddharth-nohria/"
},{
  "name": "System and Cyber Security",
  "description": " Abstract: this project was about learning, exploring and exploiting various security vulnerability in a program. Project was mostly based on system vulnerabilities under “old-style” Linux system. ",
  "body": " Abstract: this project was about learning, exploring and exploiting various security vulnerability in a program. Project was mostly based on system vulnerabilities under “old-style” Linux system. Contents: Basic linux command ssh login Assembly Language Buffer overflow attack Format string attack   Linux Basics Read, Write &amp;amp; Execute Permissions Permissions are the basic &amp;ldquo;rights&amp;rdquo; to act on a file or directory. The basic rights are read, write and execute. * Read - a readable permission allows the contents of the file to be viewed * Write - a write permission on a file allows you to modify the contents of that file. * Execute - for a file, the executable permission allows to run the file and execute a program. * We can view permissions for file for directory by ls –l command.  Some example of basic commands * SSH (the Secure Shell) * Using SSH requires a client on the local computer and a server on the remote one.* It establishes an encrypted connection to a remote computer, executes a command there and redirects its input and output across the connection. * Assembly Language * Assembly language is a low-level programming language. * Assembly language is converted into executable machine code by an assembler. * Computer basically consist of two things: CPU and memory. * And there is some internal memory (registers) only accessible to CPU. * Some Assembly Instructions * mov eax, ebx — copy the value in ebx into eax * push eax — push eax on the stack * lea eax, [var] — the value in var is placed in EAX. * jmp begin — Jump to the instruction labeled begin * Buffer overflow * Buffer: A Temporary space in memory used for hold data. * Buffer overflow: Happens when data written to the buffer is larger then size of buffer and due to insufficient bound checking it overflows and overwrites adjacent memory location.* Simple Vulnerable Function:GetInput{ Char buffer[8];gets(buffer);puts(buffer);} Gets() does not check if input size is greater than size of buffer * Format String Attack: * The Format String exploit occurs when the submitted data of an input string is evaluated as a command by the application. Using format String vulnerability we can read the stack , execute code . * Format string vulnerable function:- gets(),scanf(), printf() ,Strcpy() , strcat() ….etc(they don&amp;rsquo;t check size of input or output) * Format parameters :- * %n Write an integer to the location in the process memory* %x Read data from stack * %s Read character string from process memory **Continue.......... With summer project**   Pwntools  Written in python CTF framework Makes exploitation easy &amp;gt;&amp;gt;&amp;gt; from pwn import * # it imports a lot of functionality into global namespace &amp;gt;&amp;gt;&amp;gt; p=process(&amp;lsquo;/bin/sh&amp;rsquo;) # starts process &amp;gt;&amp;gt;&amp;gt;p.sendline(&amp;lsquo;input&amp;rsquo;) # sends input &amp;gt;&amp;gt;&amp;gt;p.recvline(timeout=5) # receives output  Canaries:  Canaries are stack guard Used to check stack buffer overflow But there are many techniques to bypass canaries  Shellcode injection and ROP  Exploiting to execute your own code with Root permission Three step Procedure :  Crafting shellcode Injecting shellcode Modify Execution flow –Run the shellcode    Web Based Attack  CSRF (Cross-site request forgery) XSS (Cross site scripting ) Attack  reflected xss attack stored xss attack DOM-based xss attack     THANK YOU !!",
  "url": "https://aca-cse-iitk.github.io/projects/project17---kamlesh-kumar/"
},{
  "name": "Haskell-Crypto",
  "description": "Tic-Tac-Toe is a single player vs cpu game Mentor : Prannay KhoslaHaskell Crypto Tic-Tac-Toe",
  "body": "Tic-Tac-Toe is a single player vs cpu game Mentor : Prannay KhoslaHaskell Crypto Tic-Tac-Toe",
  "url": "https://aca-cse-iitk.github.io/projects/readme---ankit-kumar-singh/"
},{
  "name": "Linux From Scratch",
  "description": "By: Parv MorProject: Linux from Scratch Mentor: Pallav Agarwal",
  "body": "By: Parv MorProject: Linux from Scratch Mentor: Pallav Agarwal Learnt bash scripting, regex, git, version control, chose vim as editor. Learnt several bash utilities such as grep, sed, awk, xarg, etc. To get a better understanding for bash, i implemented a student search completely in bash. The project is hosted on github: https://github.com/parvmor/Student-Search-IITK . * The student search asks user for filters recursively and. * It also displays images in terminal :) Learnt python scripting. Implemented a script to find all distinct emails in a file. link: https://github.com/parvmor/ACA-Project/blob/master/email.py Implemented a command line interface program similar to grep. Link: https://github.com/parvmor/ACA-Project/blob/master/grep.py Learnt zeromq and how to use it in python. Implemented a simulation of convergence of collatz conjecture using two different architectures: Link1: https://github.com/parvmor/ACA-Project/blob/master/passingTheParcel.py. Link2: https://github.com/parvmor/ACA-Project/blob/master/passingTheParcelSC.py As part of final assignment I worked on the linux from scratch project.http://www.linuxfromscratch.org/lfs/. The project is again hosted on github: https://github.com/parvmor/LFS The entire steps for the project were automated by implementing several web scraping scripts in python. After an initial installation of the basic utilities over the linux kernel, I made my own package manager for it. The package manager could resolve dependencies by doing a topological sort. The current version does not handles cyclic dependencies. Package manager was compiled statically(so that it would not require other packages in the lfs system itself) and can be used to install and delete packages in the lfs. Link: https://github.com/parvmor/LFS/tree/master/lancelot ",
  "url": "https://aca-cse-iitk.github.io/projects/linux-from-scratch/"
}
]
